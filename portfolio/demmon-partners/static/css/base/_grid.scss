/* This is a mobile-first responsive grid that targets min-width media queries.
 * It starts small with all columns at 100% width. Heavily based on & credited
 * to Skeleton - http://getskeleton.com/
 *
 * Sample container & grid setup:
 *
 * <div class="u-container">
 *   <div class="u-row">
 *     <div class="u-col-8x"></div>
 *     <div class="u-col-4x"></div>
 *   </div>
 * </div>
 */

$container-width:   100%;
$container-padding: 0; // The horizontal space on each side of the grid
$total-columns:     12;
$column-margin:     0%; // This should always be %, not a fixed px width.

.u-container {
	@include clearfix;

	width: 100%;
	max-width: $container-width;
	padding-right: $container-padding;
	padding-left: $container-padding;
	margin-right: auto;
	margin-left: auto;
}

.u-row {
	@include clearfix;
}

[class^="u-col-"], [class*=" u-col"] {
	width: 100%;

	@media (min-width: $breakpoint-small) {
		float: left;
		margin-left: $column-margin;

		&:first-child {
			margin-left: 0;
		}
	}
}

/* Calculate column widths based on customizable variables - $total-columns and $column-margin */

@media (min-width: $breakpoint-small) {
	@for $i from 1 through $total-columns {
		.u-col-#{$i}x {
			width: (100 / $total-columns * $i) - ($column-margin*($total-columns - $i)/$total-columns)
		}
	}
}